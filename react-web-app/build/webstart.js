(()=>{"use strict";var e,t={277:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function i(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,i)}l((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,i[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.run=void 0;var a=o(n(504));if("undefined"!=typeof process){var i=process.on;process.on=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return"uncaughtException"===e[0]?void 0:i.apply(process,e)}}function l(e,t){return r(this,void 0,void 0,(function(){var n,r,o,i,l,c;return s(this,(function(s){switch(s.label){case 0:return[4,(0,a.default)()];case 1:return n=s.sent(),r=t.importObject,o=n.parseWat("test.wat",e),i=o.toBinary({}),[4,WebAssembly.instantiate(i.buffer,r)];case 2:return l=s.sent(),c=l.instance.exports.exported_func(),console.log("Memory",l.instance.exports.memory),[2,c]}}))}))}t.run=function(e,t,n,o){return r(this,void 0,void 0,(function(){var r,a,i,c,u,p,d,m,v,f,h,x,y,E,g,T,w,b,C,S,O,B,I,M;return s(this,(function(s){switch(s.label){case 0:return r={input:JSON.stringify({program:e}),stateMachineArn:"arn:aws:states:us-west-2:078212600544:stateMachine:Wathon"},a=Date.now(),[4,fetch("https://l07eno817e.execute-api.us-west-2.amazonaws.com/delta/execution",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}})];case 1:return i=s.sent(),c=1,[4,i.json()];case 2:u=s.sent(),console.log("execution output",u),p={executionArn:u.executionArn},s.label=3;case 3:return[4,fetch("https://l07eno817e.execute-api.us-west-2.amazonaws.com/delta/desc",{method:"POST",body:JSON.stringify(p),headers:{"Content-Type":"application/json"}})];case 4:return[4,s.sent().json()];case 5:d=s.sent(),c++,s.label=6;case 6:if("RUNNING"===d.status)return[3,3];s.label=7;case 7:return m=Date.now()-a,v=1e3*(d.stopDate-d.startDate),f=JSON.parse(d.output),console.log("Final Wasm code:\n"+f),[4,l(f,n)];case 8:return h=s.sent(),x={input:JSON.stringify({program:e}),stateMachineArn:"arn:aws:states:us-west-2:078212600544:stateMachine:Wathon_Express"},y=Date.now(),[4,fetch("https://l07eno817e.execute-api.us-west-2.amazonaws.com/delta/execSync",{method:"POST",body:JSON.stringify(x),headers:{"Content-Type":"application/json"}})];case 9:return[4,s.sent().json()];case 10:return E=s.sent(),g=Date.now()-y,T=1e3*(E.stopDate-E.startDate),[4,l(JSON.parse(E.output),o)];case 11:return w=s.sent(),b={program:e},C=Date.now(),[4,fetch("http://ec2-52-39-168-9.us-west-2.compute.amazonaws.com:3000/",{method:"POST",body:JSON.stringify(b),headers:{"Content-Type":"application/json"}})];case 12:return S=s.sent(),O=Date.now()-C,[4,S.json()];case 13:return B=s.sent(),I=1e3*(B.stopDate-B.startDate),[4,l(B.output,t)];case 14:return[2,{server:M=s.sent(),serverless:h,compareServerless:h===M,compareServerlessExp:w===M,serverlessExecTime:v,serverExecTime:I,serverRespTime:O,serverlessRespTime:m,serverlessApiCalls:c,serverlessExpOutput:w,serverlessExpExecTime:T,serverlessExpRespTime:g}]}}))}))}},504:e=>{e.exports=wabt}},n={};e=function e(r){var s=n[r];if(void 0!==s)return s.exports;var o=n[r]={exports:{}};return t[r].call(o.exports,o,o.exports,e),o.exports}(277),document.addEventListener("DOMContentLoaded",(function(){function t(e,t){console.log("arg in displayServer",e);var n=document.createElement("pre");document.getElementById(t+"CompileOutput").appendChild(n),n.innerText=e}function n(e){return{importObject:{imports:{print:function(e){console.log("Logging from WASM: ",e);var t=document.createElement("pre");return document.getElementById("output").appendChild(t),t.innerText=e,e},print_num:function(n){return console.log("Logging from WASM: ",n),t(String(n),e),0},print_bool:function(n){return t(0===n?"False":"True",e),0},print_none:function(n){return t("None",e),n},abs:Math.abs,max:Math.max,min:Math.min,pow:Math.pow}}}}document.getElementById("run").addEventListener("click",(function(t){var r=document.getElementById("user-code");(0,e.run)(r.value,n("server"),n("serverless"),n("serverlessExp")).then((function(e){!function(e){if(e.server){var t=document.createElement("pre");document.getElementById("serverCompileOutput").appendChild(t),t.innerText=e.server}e.serverless&&(t=document.createElement("pre"),document.getElementById("serverlessCompileOutput").appendChild(t),t.innerText=e.serverless),e.serverlessExpOutput&&(t=document.createElement("pre"),document.getElementById("serverlessExpCompileOutput").appendChild(t),t.innerText=e.serverlessExpOutput),document.getElementById("serverlessFidelity").innerHTML=e.compareServerless?'<span style="color:green">Passed</span>':'<span style="color:red">Failed</span>',document.getElementById("serverlessExpFidelity").innerHTML=e.compareServerlessExp?'<span style="color:green">Passed</span>':'<span style="color:red">Failed</span>',e.serverlessExecTime&&(t=document.createElement("pre"),document.getElementById("serverlessCompileTime").appendChild(t),t.innerText=e.serverlessExecTime),e.serverExecTime&&(t=document.createElement("pre"),document.getElementById("serverCompileTime").appendChild(t),t.innerText=e.serverExecTime),e.serverlessRespTime&&(t=document.createElement("pre"),document.getElementById("serverlessRespTime").appendChild(t),t.innerText=e.serverlessRespTime),e.serverRespTime&&(t=document.createElement("pre"),document.getElementById("serverRespTime").appendChild(t),t.innerText=e.serverRespTime),e.serverlessApiCalls&&(t=document.createElement("pre"),document.getElementById("serverlessApiCalls").appendChild(t),t.innerText=e.serverlessApiCalls);var n=document.createElement("pre");document.getElementById("serverApiCalls").appendChild(n),n.innerText=String(1);var r=document.createElement("pre");document.getElementById("serverlessExpApiCalls").appendChild(r),r.innerText=String(1),e.serverlessExpExecTime&&(t=document.createElement("pre"),document.getElementById("serverlessExpCompileTime").appendChild(t),t.innerText=e.serverlessExpExecTime),e.serverlessExpRespTime&&(t=document.createElement("pre"),document.getElementById("serverlessExpRespTime").appendChild(t),t.innerText=e.serverlessExpRespTime)}(e),console.log("run finished")})).catch((function(e){var t,n;t=e,n=document.createElement("pre"),document.getElementById("output").appendChild(n),n.setAttribute("style","color: red"),n.innerText=String(t),console.log("run failed",e)}))}));var r=document.querySelector("textarea");r.addEventListener("keydown",(function(e){9===e.keyCode&&(e.preventDefault(),r.setRangeText("  ",r.selectionStart,r.selectionStart,"end"))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFTTSxjQUFjLE9BQ25DTixTQUFTTyxlQUFlLFVBQVVDLFlBQVlILEdBQzlDQSxFQUFJNEIsYUFBYSxRQUFTLGNBQzFCNUIsRUFBSUksVUFBWU0sT0FBT2hGLEdBV1dJLFFBQVFDLElBQUksYUFBY21GLEVBQUcsR0FDakUsSUFDQSxJQUFNVyxFQUFXbEMsU0FBU21DLGNBQWMsWUFFeENELEVBQVNqQyxpQkFBaUIsV0FBVyxTQUFDc0IsR0FDbEIsSUFBZEEsRUFBRWEsVUFDSmIsRUFBRWMsaUJBRUZILEVBQVNJLGFBQ1AsS0FDQUosRUFBU0ssZUFDVEwsRUFBU0ssZUFDVCxPQUdOLEdBQ0YsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hc20taml0Ly4vd2Vic3RhcnQudHMiLCJ3ZWJwYWNrOi8vd2ViLWFzbS1qaXQvLi9ydW5uZXIudHMiLCJ3ZWJwYWNrOi8vd2ViLWFzbS1qaXQvZXh0ZXJuYWwgdmFyIFwid2FidFwiIiwid2VicGFjazovL3dlYi1hc20taml0L3dlYnBhY2svYm9vdHN0cmFwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJ1biB9IGZyb20gJy4vcnVubmVyJztcblxuXG5mdW5jdGlvbiB3ZWJTdGFydCgpIHtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGRpc3BsYXkoYXJnOiBzdHJpbmcsIGVsZW1lbnQ6IHN0cmluZykge1xuICAgICAgY29uc29sZS5sb2coXCJhcmcgaW4gZGlzcGxheVNlcnZlclwiLCBhcmcpXG4gICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudCArIFwiQ29tcGlsZU91dHB1dFwiKS5hcHBlbmRDaGlsZChlbHQpO1xuICAgICAgZWx0LmlubmVyVGV4dCA9IGFyZztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRJbXBvcnRPYmplY3QodHlwZTogc3RyaW5nKSB7XG4gICAgICB2YXIgaW1wb3J0T2JqZWN0ID0ge1xuICAgICAgICBpbXBvcnRzOiB7XG4gICAgICAgICAgcHJpbnQ6IChhcmc6IGFueSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJMb2dnaW5nIGZyb20gV0FTTTogXCIsIGFyZyk7XG4gICAgICAgICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJvdXRwdXRcIikuYXBwZW5kQ2hpbGQoZWx0KTtcbiAgICAgICAgICAgIGVsdC5pbm5lclRleHQgPSBhcmc7XG4gICAgICAgICAgICByZXR1cm4gYXJnO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcHJpbnRfbnVtOiAoYXJnOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTG9nZ2luZyBmcm9tIFdBU006IFwiLCBhcmcpO1xuICAgICAgICAgICAgZGlzcGxheShTdHJpbmcoYXJnKSwgdHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByaW50X2Jvb2w6IChhcmc6IGFueSkgPT4ge1xuICAgICAgICAgICAgaWYgKGFyZyA9PT0gMCkgeyBkaXNwbGF5KFwiRmFsc2VcIiwgdHlwZSk7IH1cbiAgICAgICAgICAgIGVsc2UgeyBkaXNwbGF5KFwiVHJ1ZVwiLCB0eXBlKTsgfVxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcmludF9ub25lOiAoYXJnOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGRpc3BsYXkoXCJOb25lXCIsIHR5cGUpO1xuICAgICAgICAgICAgcmV0dXJuIGFyZztcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFiczogTWF0aC5hYnMsXG4gICAgICAgICAgbWF4OiBNYXRoLm1heCxcbiAgICAgICAgICBtaW46IE1hdGgubWluLFxuICAgICAgICAgIHBvdzogTWF0aC5wb3csXG4gICAgICAgIH0sXG4gICAgICB9XG4gICAgICByZXR1cm4geyBpbXBvcnRPYmplY3QgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJSZXN1bHQocmVzdWx0OiBhbnkpOiB2b2lkIHtcbiAgICAgIGlmIChyZXN1bHQuc2VydmVyKSB7XG4gICAgICAgIGNvbnN0IGVsdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcmVcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVyQ29tcGlsZU91dHB1dFwiKS5hcHBlbmRDaGlsZChlbHQpO1xuICAgICAgICBlbHQuaW5uZXJUZXh0ID0gcmVzdWx0LnNlcnZlcjtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuc2VydmVybGVzcykge1xuICAgICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlcnZlcmxlc3NDb21waWxlT3V0cHV0XCIpLmFwcGVuZENoaWxkKGVsdCk7XG4gICAgICAgIGVsdC5pbm5lclRleHQgPSByZXN1bHQuc2VydmVybGVzcztcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuc2VydmVybGVzc0V4cE91dHB1dCkge1xuICAgICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlcnZlcmxlc3NFeHBDb21waWxlT3V0cHV0XCIpLmFwcGVuZENoaWxkKGVsdCk7XG4gICAgICAgIGVsdC5pbm5lclRleHQgPSByZXN1bHQuc2VydmVybGVzc0V4cE91dHB1dDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHNlcnZlcmxlc3NGaWRlbGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVybGVzc0ZpZGVsaXR5XCIpO1xuICAgICAgc2VydmVybGVzc0ZpZGVsaXR5LmlubmVySFRNTCA9IHJlc3VsdC5jb21wYXJlU2VydmVybGVzcyA/IGA8c3BhbiBzdHlsZT1cImNvbG9yOmdyZWVuXCI+UGFzc2VkPC9zcGFuPmAgOiBgPHNwYW4gc3R5bGU9XCJjb2xvcjpyZWRcIj5GYWlsZWQ8L3NwYW4+YDtcbiAgICAgIGNvbnN0IHNlcnZlcmxlc3NFeHBGaWRlbGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVybGVzc0V4cEZpZGVsaXR5XCIpO1xuICAgICAgc2VydmVybGVzc0V4cEZpZGVsaXR5LmlubmVySFRNTCA9IHJlc3VsdC5jb21wYXJlU2VydmVybGVzc0V4cCA/IGA8c3BhbiBzdHlsZT1cImNvbG9yOmdyZWVuXCI+UGFzc2VkPC9zcGFuPmAgOiBgPHNwYW4gc3R5bGU9XCJjb2xvcjpyZWRcIj5GYWlsZWQ8L3NwYW4+YDtcbiAgICAgIGlmIChyZXN1bHQuc2VydmVybGVzc0V4ZWNUaW1lKSB7XG4gICAgICAgIGNvbnN0IGVsdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcmVcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVybGVzc0NvbXBpbGVUaW1lXCIpLmFwcGVuZENoaWxkKGVsdCk7XG4gICAgICAgIGVsdC5pbm5lclRleHQgPSByZXN1bHQuc2VydmVybGVzc0V4ZWNUaW1lO1xuICAgICAgfVxuICAgICAgaWYgKHJlc3VsdC5zZXJ2ZXJFeGVjVGltZSkge1xuICAgICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlcnZlckNvbXBpbGVUaW1lXCIpLmFwcGVuZENoaWxkKGVsdCk7XG4gICAgICAgIGVsdC5pbm5lclRleHQgPSByZXN1bHQuc2VydmVyRXhlY1RpbWU7XG4gICAgICB9XG4gICAgICBpZiAocmVzdWx0LnNlcnZlcmxlc3NSZXNwVGltZSkge1xuICAgICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlcnZlcmxlc3NSZXNwVGltZVwiKS5hcHBlbmRDaGlsZChlbHQpO1xuICAgICAgICBlbHQuaW5uZXJUZXh0ID0gcmVzdWx0LnNlcnZlcmxlc3NSZXNwVGltZTtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQuc2VydmVyUmVzcFRpbWUpIHtcbiAgICAgICAgY29uc3QgZWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInByZVwiKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXJ2ZXJSZXNwVGltZVwiKS5hcHBlbmRDaGlsZChlbHQpO1xuICAgICAgICBlbHQuaW5uZXJUZXh0ID0gcmVzdWx0LnNlcnZlclJlc3BUaW1lO1xuICAgICAgfVxuICAgICAgaWYgKHJlc3VsdC5zZXJ2ZXJsZXNzQXBpQ2FsbHMpIHtcbiAgICAgICAgY29uc3QgZWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInByZVwiKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXJ2ZXJsZXNzQXBpQ2FsbHNcIikuYXBwZW5kQ2hpbGQoZWx0KTtcbiAgICAgICAgZWx0LmlubmVyVGV4dCA9IHJlc3VsdC5zZXJ2ZXJsZXNzQXBpQ2FsbHM7XG4gICAgICB9XG4gICAgICBjb25zdCBlbHQxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInByZVwiKTtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVyQXBpQ2FsbHNcIikuYXBwZW5kQ2hpbGQoZWx0MSk7XG4gICAgICBlbHQxLmlubmVyVGV4dCA9IFN0cmluZygxKTtcbiAgICAgIGNvbnN0IGVsdDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXJ2ZXJsZXNzRXhwQXBpQ2FsbHNcIikuYXBwZW5kQ2hpbGQoZWx0Mik7XG4gICAgICBlbHQyLmlubmVyVGV4dCA9IFN0cmluZygxKTtcbiAgICAgIGlmIChyZXN1bHQuc2VydmVybGVzc0V4cEV4ZWNUaW1lKSB7XG4gICAgICAgIGNvbnN0IGVsdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcmVcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VydmVybGVzc0V4cENvbXBpbGVUaW1lXCIpLmFwcGVuZENoaWxkKGVsdCk7XG4gICAgICAgIGVsdC5pbm5lclRleHQgPSByZXN1bHQuc2VydmVybGVzc0V4cEV4ZWNUaW1lO1xuICAgICAgfVxuICAgICAgaWYgKHJlc3VsdC5zZXJ2ZXJsZXNzRXhwUmVzcFRpbWUpIHtcbiAgICAgICAgY29uc3QgZWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInByZVwiKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZXJ2ZXJsZXNzRXhwUmVzcFRpbWVcIikuYXBwZW5kQ2hpbGQoZWx0KTtcbiAgICAgICAgZWx0LmlubmVyVGV4dCA9IHJlc3VsdC5zZXJ2ZXJsZXNzRXhwUmVzcFRpbWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyRXJyb3IocmVzdWx0OiBhbnkpOiB2b2lkIHtcbiAgICAgIGNvbnN0IGVsdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcmVcIik7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm91dHB1dFwiKS5hcHBlbmRDaGlsZChlbHQpO1xuICAgICAgZWx0LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiY29sb3I6IHJlZFwiKTtcbiAgICAgIGVsdC5pbm5lclRleHQgPSBTdHJpbmcocmVzdWx0KTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJ1blwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGNvbnN0IHNvdXJjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlci1jb2RlXCIpIGFzIEhUTUxUZXh0QXJlYUVsZW1lbnQ7XG4gICAgICBydW4oXG4gICAgICAgIHNvdXJjZS52YWx1ZSxcbiAgICAgICAgZ2V0SW1wb3J0T2JqZWN0KFwic2VydmVyXCIpLFxuICAgICAgICBnZXRJbXBvcnRPYmplY3QoXCJzZXJ2ZXJsZXNzXCIpLFxuICAgICAgICBnZXRJbXBvcnRPYmplY3QoXCJzZXJ2ZXJsZXNzRXhwXCIpXG4gICAgICApLnRoZW4oKHIpID0+IHsgcmVuZGVyUmVzdWx0KHIpOyBjb25zb2xlLmxvZyhcInJ1biBmaW5pc2hlZFwiKSB9KVxuICAgICAgICAuY2F0Y2goKGUpID0+IHsgcmVuZGVyRXJyb3IoZSk7IGNvbnNvbGUubG9nKFwicnVuIGZhaWxlZFwiLCBlKSB9KTs7XG4gICAgfSk7XG4gICAgY29uc3QgdGV4dGFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIik7XG5cbiAgICB0ZXh0YXJlYS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xuICAgICAgaWYgKGUua2V5Q29kZSA9PT0gOSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgdGV4dGFyZWEuc2V0UmFuZ2VUZXh0KFxuICAgICAgICAgIFwiICBcIixcbiAgICAgICAgICB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgICB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgICBcImVuZFwiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG53ZWJTdGFydCgpO1xuIiwiLy8gVGhpcyBpcyBhIG1hc2h1cCBvZiB0dXRvcmlhbHMgZnJvbTpcbi8vXG4vLyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9Bc3NlbWJseVNjcmlwdC93YWJ0LmpzL1xuLy8gLSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYkFzc2VtYmx5L1VzaW5nX3RoZV9KYXZhU2NyaXB0X0FQSVxuXG4vLyBpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHdhYnQgZnJvbSAnd2FidCc7XG5cbi8vIE5PVEUoam9lKTogVGhpcyBpcyBhIGhhY2sgdG8gZ2V0IHRoZSBDTEkgUmVwbCB0byBydW4uIFdBQlQgcmVnaXN0ZXJzIGEgZ2xvYmFsXG4vLyB1bmNhdWdodCBleG4gaGFuZGxlciwgYW5kIHRoaXMgaXMgbm90IGFsbG93ZWQgd2hlbiBydW5uaW5nIHRoZSBSRVBMXG4vLyAoaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9yZXBsLmh0bWwjcmVwbF9nbG9iYWxfdW5jYXVnaHRfZXhjZXB0aW9ucykuIE5vIHJlYXNvblxuLy8gaXMgZ2l2ZW4gZm9yIHRoaXMgaW4gdGhlIGRvY3MgcGFnZSwgYW5kIEkgaGF2ZW4ndCBzcGVudCB0aW1lIG9uIHRoZSBkb21haW5cbi8vIG1vZHVsZSB0byBmaWd1cmUgb3V0IHdoYXQncyBnb2luZyBvbiBoZXJlLiBJdCBkb2Vzbid0IHNlZW0gY3JpdGljYWwgZm9yIFdBQlRcbi8vIHRvIGhhdmUgdGhpcyBzdXBwb3J0LCBzbyB3ZSBwYXRjaCBpdCBhd2F5LlxuaWYgKHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIGNvbnN0IG9sZFByb2Nlc3NPbiA9IHByb2Nlc3Mub247XG4gIHByb2Nlc3Mub24gPSAoLi4uYXJnczogYW55KTogYW55ID0+IHtcbiAgICBpZiAoYXJnc1swXSA9PT0gXCJ1bmNhdWdodEV4Y2VwdGlvblwiKSB7IHJldHVybjsgfVxuICAgIGVsc2UgeyByZXR1cm4gb2xkUHJvY2Vzc09uLmFwcGx5KHByb2Nlc3MsIGFyZ3MpOyB9XG4gIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGV4ZWNXYXNtKHdhc21Tb3VyY2U6IHN0cmluZywgY29uZmlnOiBhbnkpIHtcbiAgY29uc3Qgd2FidEludGVyZmFjZSA9IGF3YWl0IHdhYnQoKTtcbiAgY29uc3QgaW1wb3J0T2JqZWN0ID0gY29uZmlnLmltcG9ydE9iamVjdDtcbiAgY29uc3QgbXlNb2R1bGUgPSB3YWJ0SW50ZXJmYWNlLnBhcnNlV2F0KFwidGVzdC53YXRcIiwgd2FzbVNvdXJjZSk7XG4gIHZhciBhc0JpbmFyeSA9IG15TW9kdWxlLnRvQmluYXJ5KHt9KTtcbiAgdmFyIHdhc21Nb2R1bGUgPSBhd2FpdCBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShhc0JpbmFyeS5idWZmZXIsIGltcG9ydE9iamVjdCk7XG4gIGNvbnN0IHJlc3VsdCA9ICh3YXNtTW9kdWxlLmluc3RhbmNlLmV4cG9ydHMuZXhwb3J0ZWRfZnVuYyBhcyBhbnkpKCk7XG4gIGNvbnNvbGUubG9nKFwiTWVtb3J5XCIsIHdhc21Nb2R1bGUuaW5zdGFuY2UuZXhwb3J0cy5tZW1vcnkpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcnVuKHNvdXJjZTogc3RyaW5nLCBzZXJ2ZXJDb25maWc6IGFueSwgc2VydmVybGVzc0NvbmZpZzogYW55LCBzZXJ2ZXJsZXNzRXhwQ29uZmlnOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAvLyBTZXJ2ZXJsZXNzXG4gIGNvbnN0IGV4ZWNJbnB1dCA9IHtcbiAgICBpbnB1dDogSlNPTi5zdHJpbmdpZnkoeyBwcm9ncmFtOiBzb3VyY2UgfSksXG4gICAgc3RhdGVNYWNoaW5lQXJuOiBcImFybjphd3M6c3RhdGVzOnVzLXdlc3QtMjowNzgyMTI2MDA1NDQ6c3RhdGVNYWNoaW5lOldhdGhvblwiXG4gIH1cbiAgY29uc3Qgc2VydmVybGVzc1Jlc3BTdGFydCA9IERhdGUubm93KCk7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vbDA3ZW5vODE3ZS5leGVjdXRlLWFwaS51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9kZWx0YS9leGVjdXRpb24nLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZXhlY0lucHV0KSxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgfVxuICB9KTtcbiAgdmFyIHNlcnZlcmxlc3NBcGlDYWxsczpudW1iZXIgPSAxO1xuICBjb25zdCBzZXJ2ZXJsZXNzUmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICBjb25zb2xlLmxvZyhcImV4ZWN1dGlvbiBvdXRwdXRcIiwgc2VydmVybGVzc1Jlc3VsdCk7XG4gIGNvbnN0IGRldGFpbHNJbnB1dCA9IHtcbiAgICBleGVjdXRpb25Bcm46IHNlcnZlcmxlc3NSZXN1bHQuZXhlY3V0aW9uQXJuXG4gIH1cbiAgdmFyIGV4ZWNEZXRhaWxzUmVzdWx0O1xuICBkbyB7XG4gICAgY29uc3QgZXhlY0RldGFpbHMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9sMDdlbm84MTdlLmV4ZWN1dGUtYXBpLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2RlbHRhL2Rlc2MnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRldGFpbHNJbnB1dCksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KTtcbiAgICBleGVjRGV0YWlsc1Jlc3VsdCA9IGF3YWl0IGV4ZWNEZXRhaWxzLmpzb24oKTtcbiAgICBzZXJ2ZXJsZXNzQXBpQ2FsbHMrKztcbiAgfSB3aGlsZSAoZXhlY0RldGFpbHNSZXN1bHQuc3RhdHVzID09PSBcIlJVTk5JTkdcIik7XG4gIGNvbnN0IHNlcnZlcmxlc3NSZXNwVGltZSA9IERhdGUubm93KCktc2VydmVybGVzc1Jlc3BTdGFydDtcbiAgY29uc3Qgc2VydmVybGVzc0V4ZWNUaW1lID0gKGV4ZWNEZXRhaWxzUmVzdWx0LnN0b3BEYXRlIC0gZXhlY0RldGFpbHNSZXN1bHQuc3RhcnREYXRlKSAqIDEwMDA7XG4gIGNvbnN0IHdhc21Tb3VyY2U6IHN0cmluZyA9IEpTT04ucGFyc2UoZXhlY0RldGFpbHNSZXN1bHQub3V0cHV0KTtcbiAgY29uc29sZS5sb2coXCJGaW5hbCBXYXNtIGNvZGU6XFxuXCIgKyB3YXNtU291cmNlKTtcbiAgY29uc3Qgc2VydmVybGVzc091dHB1dCA9IGF3YWl0IGV4ZWNXYXNtKHdhc21Tb3VyY2UsIHNlcnZlcmxlc3NDb25maWcpO1xuICAvLyBFeHByZXNzIFNlcnZlcmxlc3MgXG4gIGNvbnN0IGV4ZWNFeHBJbnB1dCA9IHtcbiAgICBpbnB1dDogSlNPTi5zdHJpbmdpZnkoeyBwcm9ncmFtOiBzb3VyY2UgfSksXG4gICAgc3RhdGVNYWNoaW5lQXJuOiBcImFybjphd3M6c3RhdGVzOnVzLXdlc3QtMjowNzgyMTI2MDA1NDQ6c3RhdGVNYWNoaW5lOldhdGhvbl9FeHByZXNzXCJcbiAgfVxuICBjb25zdCBzZXJ2ZXJsZXNzRXhwUmVzcFN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgY29uc3QgcmVzcG9uc2VFeHAgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9sMDdlbm84MTdlLmV4ZWN1dGUtYXBpLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2RlbHRhL2V4ZWNTeW5jJywge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGV4ZWNFeHBJbnB1dCksXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IHNlcnZlcmxlc3NFeHBSZXN1bHQgPSBhd2FpdCByZXNwb25zZUV4cC5qc29uKCk7XG4gIGNvbnN0IHNlcnZlcmxlc3NFeHBSZXNwVGltZSA9IERhdGUubm93KCktc2VydmVybGVzc0V4cFJlc3BTdGFydDtcbiAgY29uc3Qgc2VydmVybGVzc0V4cEV4ZWNUaW1lID0gKHNlcnZlcmxlc3NFeHBSZXN1bHQuc3RvcERhdGUgLSBzZXJ2ZXJsZXNzRXhwUmVzdWx0LnN0YXJ0RGF0ZSkgKiAxMDAwO1xuICBjb25zdCBzZXJ2ZXJsZXNzRXhwT3V0cHV0ID0gYXdhaXQgZXhlY1dhc20oSlNPTi5wYXJzZShzZXJ2ZXJsZXNzRXhwUmVzdWx0Lm91dHB1dCksIHNlcnZlcmxlc3NFeHBDb25maWcpO1xuICAvLyBTZXJ2ZXJcbiAgY29uc3Qgc2VydmVySW5wdXQgPSB7XG4gICAgcHJvZ3JhbTogc291cmNlXG4gIH1cbiAgY29uc3Qgc2VydmVyUmVzcFN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgY29uc3Qgc2VydmVyUmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2VjMi01Mi0zOS0xNjgtOS51cy13ZXN0LTIuY29tcHV0ZS5hbWF6b25hd3MuY29tOjMwMDAvJywge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHNlcnZlcklucHV0KSxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgfVxuICB9KTtcbiAgY29uc3Qgc2VydmVyUmVzcFRpbWUgPSBEYXRlLm5vdygpLXNlcnZlclJlc3BTdGFydDtcbiAgY29uc3Qgc2VydmVyUmVzdWx0ID0gYXdhaXQgc2VydmVyUmVzcG9uc2UuanNvbigpO1xuICBjb25zdCBzZXJ2ZXJFeGVjVGltZSA9IChzZXJ2ZXJSZXN1bHQuc3RvcERhdGUgLSBzZXJ2ZXJSZXN1bHQuc3RhcnREYXRlKSAqIDEwMDA7XG4gIGNvbnN0IHNlcnZlck91dHB1dCA9IGF3YWl0IGV4ZWNXYXNtKHNlcnZlclJlc3VsdC5vdXRwdXQsIHNlcnZlckNvbmZpZyk7XG4gIC8vIFJldHVybiB2YWx1ZXNcbiAgcmV0dXJuIHtcbiAgICBzZXJ2ZXI6IHNlcnZlck91dHB1dCxcbiAgICBzZXJ2ZXJsZXNzOiBzZXJ2ZXJsZXNzT3V0cHV0LFxuICAgIGNvbXBhcmVTZXJ2ZXJsZXNzOiBzZXJ2ZXJsZXNzT3V0cHV0ID09PSBzZXJ2ZXJPdXRwdXQsXG4gICAgY29tcGFyZVNlcnZlcmxlc3NFeHA6IHNlcnZlcmxlc3NFeHBPdXRwdXQgPT09IHNlcnZlck91dHB1dCxcbiAgICBzZXJ2ZXJsZXNzRXhlY1RpbWUsXG4gICAgc2VydmVyRXhlY1RpbWUsXG4gICAgc2VydmVyUmVzcFRpbWUsXG4gICAgc2VydmVybGVzc1Jlc3BUaW1lLFxuICAgIHNlcnZlcmxlc3NBcGlDYWxscyxcbiAgICBzZXJ2ZXJsZXNzRXhwT3V0cHV0LFxuICAgIHNlcnZlcmxlc3NFeHBFeGVjVGltZSxcbiAgICBzZXJ2ZXJsZXNzRXhwUmVzcFRpbWVcbiAgfTtcbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gd2FidDsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJvbiIsImFyZ3MiLCJhcHBseSIsImV4ZWNXYXNtIiwid2FzbVNvdXJjZSIsImNvbmZpZyIsIndhYnRJbnRlcmZhY2UiLCJpbXBvcnRPYmplY3QiLCJteU1vZHVsZSIsInBhcnNlV2F0IiwiYXNCaW5hcnkiLCJ0b0JpbmFyeSIsIldlYkFzc2VtYmx5IiwiaW5zdGFudGlhdGUiLCJidWZmZXIiLCJ3YXNtTW9kdWxlIiwicmVzdWx0IiwiaW5zdGFuY2UiLCJleHBvcnRzIiwiZXhwb3J0ZWRfZnVuYyIsImNvbnNvbGUiLCJsb2ciLCJtZW1vcnkiLCJzb3VyY2UiLCJzZXJ2ZXJDb25maWciLCJzZXJ2ZXJsZXNzQ29uZmlnIiwic2VydmVybGVzc0V4cENvbmZpZyIsImV4ZWNJbnB1dCIsImlucHV0IiwiSlNPTiIsInN0cmluZ2lmeSIsInByb2dyYW0iLCJzdGF0ZU1hY2hpbmVBcm4iLCJzZXJ2ZXJsZXNzUmVzcFN0YXJ0IiwiRGF0ZSIsIm5vdyIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsImhlYWRlcnMiLCJyZXNwb25zZSIsInNlcnZlcmxlc3NBcGlDYWxscyIsImpzb24iLCJzZXJ2ZXJsZXNzUmVzdWx0IiwiZGV0YWlsc0lucHV0IiwiZXhlY3V0aW9uQXJuIiwiZXhlY0RldGFpbHNSZXN1bHQiLCJzdGF0dXMiLCJzZXJ2ZXJsZXNzUmVzcFRpbWUiLCJzZXJ2ZXJsZXNzRXhlY1RpbWUiLCJzdG9wRGF0ZSIsInN0YXJ0RGF0ZSIsInBhcnNlIiwib3V0cHV0Iiwic2VydmVybGVzc091dHB1dCIsImV4ZWNFeHBJbnB1dCIsInNlcnZlcmxlc3NFeHBSZXNwU3RhcnQiLCJzZXJ2ZXJsZXNzRXhwUmVzdWx0Iiwic2VydmVybGVzc0V4cFJlc3BUaW1lIiwic2VydmVybGVzc0V4cEV4ZWNUaW1lIiwic2VydmVybGVzc0V4cE91dHB1dCIsInNlcnZlcklucHV0Iiwic2VydmVyUmVzcFN0YXJ0Iiwic2VydmVyUmVzcG9uc2UiLCJzZXJ2ZXJSZXNwVGltZSIsInNlcnZlclJlc3VsdCIsInNlcnZlckV4ZWNUaW1lIiwic2VydmVyIiwic2VydmVyT3V0cHV0Iiwic2VydmVybGVzcyIsImNvbXBhcmVTZXJ2ZXJsZXNzIiwiY29tcGFyZVNlcnZlcmxlc3NFeHAiLCJtb2R1bGUiLCJ3YWJ0IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImNhbGwiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNwbGF5IiwiYXJnIiwiZWxlbWVudCIsImVsdCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFwcGVuZENoaWxkIiwiaW5uZXJUZXh0IiwiZ2V0SW1wb3J0T2JqZWN0IiwidHlwZSIsImltcG9ydHMiLCJwcmludCIsInByaW50X251bSIsIlN0cmluZyIsInByaW50X2Jvb2wiLCJwcmludF9ub25lIiwiYWJzIiwiTWF0aCIsIm1heCIsIm1pbiIsInBvdyIsImUiLCJydW4iLCJ2YWx1ZSIsInRoZW4iLCJyIiwiaW5uZXJIVE1MIiwiZWx0MSIsImVsdDIiLCJyZW5kZXJSZXN1bHQiLCJjYXRjaCIsInNldEF0dHJpYnV0ZSIsInRleHRhcmVhIiwicXVlcnlTZWxlY3RvciIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsInNldFJhbmdlVGV4dCIsInNlbGVjdGlvblN0YXJ0Il0sInNvdXJjZVJvb3QiOiIifQ==